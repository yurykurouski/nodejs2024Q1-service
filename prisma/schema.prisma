// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Album {
  id          String     @id @default(uuid())
  name        String
  year        Int
  artistId    String?
  artist      Artist?    @relation(fields: [artistId], references: [id], onDelete: SetNull)
  Track       Track[]
  Favorites   Favorites? @relation("AlbumToFavorites", fields: [favoritesId], references: [id])
  favoritesId Int?
}

model Artist {
  id          String     @id @default(uuid())
  name        String
  grammy      Boolean    @default(false)
  tracks      Track[]
  albums      Album[]
  Favorites   Favorites? @relation("ArtistToFavorites", fields: [favoritesId], references: [id])
  favoritesId Int?
}

model Track {
  id          String     @id @default(uuid())
  name        String
  artistId    String?
  artist      Artist?    @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId     String?
  album       Album?     @relation(fields: [albumId], references: [id], onDelete: SetNull)
  duration    Int
  Favorites   Favorites? @relation("TrackToFavorites", fields: [favoritesId], references: [id], onDelete: SetNull)
  favoritesId Int?
}

model User {
  id        String   @id @default(uuid())
  login     String
  password  String
  version   Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorites {
  id Int @id @default(01)

  artists Artist[] @relation("ArtistToFavorites")
  albums  Album[]  @relation("AlbumToFavorites")
  tracks  Track[]  @relation("TrackToFavorites")
}
